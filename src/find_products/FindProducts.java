/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package find_products;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author eminda
 */
public class FindProducts extends javax.swing.JFrame {

    /**
     * Creates new form Auction
     */
    public FindProducts() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtUrl = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("scrape Auction");

        jLabel1.setText("URL");

        jButton2.setText("Start");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(104, 104, 104)
                        .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        List<String> auctionList = ProductScraper.getAuctionList(txtUrl.getText());
        List<ProductContent> datas = new ArrayList<>();
        
        for (String url : auctionList) {
            try {
                List<ProductContent> doM = ProductScraper.doM(url);
                for (ProductContent productContent : doM) {
                    datas.add(productContent);
                }
                
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println();
        }
        try {
            createExceSheet(datas, "./find_products.xlsx");
            JOptionPane.showMessageDialog(this, "Task Completed..");
            this.dispose();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void createExceSheet(List<ProductContent> datas, String path) throws IOException {
        Workbook workbook = new XSSFWorkbook();
        CreationHelper createHelper = workbook.getCreationHelper();
        Sheet sheet = workbook.createSheet("Find Products");
        Font headerFont = workbook.createFont();
        headerFont.setBold(true);
        headerFont.setFontHeightInPoints((short) 14);
        headerFont.setColor(IndexedColors.RED.getIndex());
        
        Font header2Font = workbook.createFont();
        header2Font.setBold(true);
        header2Font.setFontHeightInPoints((short) 12);
        header2Font.setColor(IndexedColors.BROWN.getIndex());

        CellStyle headerCellStyle = workbook.createCellStyle();
        headerCellStyle.setFont(headerFont);
        
        CellStyle header2CellStyle = workbook.createCellStyle();
        header2CellStyle.setFont(header2Font);

        Row headerRow1 = sheet.createRow(0);
        
        Row headerRow2 = sheet.createRow(1);
           
        Cell headerCell1_1 = headerRow1.createCell(0);
        Cell headerCell1_2 = headerRow2.createCell(0);
        headerCell1_1.setCellValue("UPC Code");
        headerCell1_1.setCellStyle(headerCellStyle);
        int mergedHead1 = sheet.addMergedRegion(new CellRangeAddress(0,1,0,0));
        sheet.autoSizeColumn(mergedHead1);
        
        Cell headerCell2 = headerRow1.createCell(1);
        headerCell2.setCellValue("Product Title");
        headerCell2.setCellStyle(headerCellStyle);
        sheet.addMergedRegion(new CellRangeAddress(0,1,1,1));
        sheet.autoSizeColumn(1);
        
        Cell headerCell3 = headerRow1.createCell(2);
        headerCell3.setCellValue("Amazon Link");
        headerCell3.setCellStyle(headerCellStyle);
        sheet.addMergedRegion(new CellRangeAddress(0,1,2,2));
        sheet.autoSizeColumn(2);
        
        Cell headerCell4_head_1 = headerRow1.createCell(3);
        Cell headerCell4_head_2 = headerRow1.createCell(4);
        int mergedHD = sheet.addMergedRegion(new CellRangeAddress(0,0,3,4));
        headerCell4_head_1.setCellValue("Home Depot");
        headerCell4_head_1.setCellStyle(headerCellStyle);
        sheet.autoSizeColumn(mergedHD);        
        Cell headerCell4_prodcutLink = headerRow2.createCell(3);
        Cell headerCell4_price = headerRow2.createCell(4);
        headerCell4_prodcutLink.setCellValue("Product Link");
        headerCell4_prodcutLink.setCellStyle(header2CellStyle);
        headerCell4_price.setCellValue("Price");
        headerCell4_price.setCellStyle(header2CellStyle);
        sheet.autoSizeColumn(3);
        sheet.autoSizeColumn(4);
        
        Cell headerCell5_head_1 = headerRow1.createCell(5);
        Cell headerCell5_head_2 = headerRow1.createCell(6);
        int mergedOS = sheet.addMergedRegion(new CellRangeAddress(0,0,5,6));
        headerCell5_head_1.setCellValue("Over Stock");
        headerCell5_head_1.setCellStyle(headerCellStyle);
        sheet.autoSizeColumn(mergedOS);
        Cell headerCell5_prodcutLink = headerRow2.createCell(5);
        Cell headerCell5_price = headerRow2.createCell(6);
        headerCell5_prodcutLink.setCellValue("Product Link");
        headerCell5_prodcutLink.setCellStyle(header2CellStyle);
        headerCell5_price.setCellValue("Price");
        headerCell5_price.setCellStyle(header2CellStyle);
        sheet.autoSizeColumn(5);
        sheet.autoSizeColumn(6);
        
        Cell headerCell6_head_1 = headerRow1.createCell(7);
        Cell headerCell6_head_2 = headerRow1.createCell(8);
        int mergedBB = sheet.addMergedRegion(new CellRangeAddress(0,0,7,8));
        headerCell6_head_1.setCellValue("Bed Bath & Beyond");
        headerCell6_head_1.setCellStyle(headerCellStyle);
        sheet.autoSizeColumn(mergedBB);
        Cell headerCell6_prodcutLink = headerRow2.createCell(7);
        Cell headerCell6_price = headerRow2.createCell(8);
        headerCell6_prodcutLink.setCellValue("Product Link");
        headerCell6_prodcutLink.setCellStyle(header2CellStyle);
        headerCell6_price.setCellValue("Price");
        headerCell6_price.setCellStyle(header2CellStyle);
        sheet.autoSizeColumn(7);
        sheet.autoSizeColumn(8);
        
        Cell headerCell7_head_1 = headerRow1.createCell(9);
        Cell headerCell7_head_2 = headerRow1.createCell(10);
        int mergedWal = sheet.addMergedRegion(new CellRangeAddress(0,0,9,10));
        headerCell7_head_1.setCellValue("Walmart");
        headerCell7_head_1.setCellStyle(headerCellStyle);
        sheet.autoSizeColumn(mergedWal);
        Cell headerCell7_prodcutLink = headerRow2.createCell(9);
        Cell headerCell7_price = headerRow2.createCell(10);
        headerCell7_prodcutLink.setCellValue("Product Link");
        headerCell7_prodcutLink.setCellStyle(header2CellStyle);
        headerCell7_price.setCellValue("Price");
        headerCell7_price.setCellStyle(header2CellStyle);
        sheet.autoSizeColumn(9);
        sheet.autoSizeColumn(10);
        
        Cell headerCell8_head_1 = headerRow1.createCell(11);
        Cell headerCell8_head_2 = headerRow1.createCell(12);
        int mergedCost = sheet.addMergedRegion(new CellRangeAddress(0,0,11,12));
        headerCell8_head_1.setCellValue("Costco");
        headerCell8_head_1.setCellStyle(headerCellStyle);
        sheet.autoSizeColumn(mergedCost);
        Cell headerCell8_prodcutLink = headerRow2.createCell(11);
        Cell headerCell8_price = headerRow2.createCell(12);
        headerCell8_prodcutLink.setCellValue("Product Link");
        headerCell8_prodcutLink.setCellStyle(header2CellStyle);
        headerCell8_price.setCellValue("Price");
        headerCell8_price.setCellStyle(header2CellStyle);
        sheet.autoSizeColumn(11);
        sheet.autoSizeColumn(12);

        // Create cells
//        for (int i = 0; i < list.size(); i++) {
//        }
        // Create Cell Style for formatting Date
        CellStyle dateCellStyle = workbook.createCellStyle();
        dateCellStyle.setDataFormat(createHelper.createDataFormat().getFormat("dd/MM/yyyy"));

        // Create Other rows and cells with employees data
        int rowNum = 2;
        int max = 6;
        for (ProductContent data : datas) {
            Row row = sheet.createRow(rowNum++);
            row.createCell(0).setCellValue(data.getUpcCode());
            row.createCell(1).setCellValue(data.getProductTitle());
            row.createCell(2).setCellValue(data.getAmzonLink());
            row.createCell(3).setCellValue(data.getHd_productLink());
            row.createCell(4).setCellValue(data.getHd_price());
            row.createCell(5).setCellValue(data.getOs_productLink());
            row.createCell(6).setCellValue(data.getOs_price());
            row.createCell(7).setCellValue(data.getBb_productLink());
            row.createCell(8).setCellValue(data.getBb_price());
            row.createCell(9).setCellValue(data.getWalmart_productLink());
            row.createCell(10).setCellValue(data.getWalmart_price());
            row.createCell(11).setCellValue(data.getCostco_productLink());
            row.createCell(12).setCellValue(data.getCostco_price());
        }

//        for (int i = 0; i <= 12; i++) {
//            sheet.autoSizeColumn(i);
//        }

        FileOutputStream fileOut = new FileOutputStream(path);
        workbook.write(fileOut);
        fileOut.close();
        workbook.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtUrl;
    // End of variables declaration//GEN-END:variables
}
